ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv5-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB164:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
  32:Src/main.c    ****   *    this license. 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 2


  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f7xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "lwip.h"
  54:Src/main.c    **** #include "term_io.h"
  55:Src/main.c    **** #include "dbgu.h"
  56:Src/main.c    **** #include "ansi.h"
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END Includes */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** RTC_HandleTypeDef hrtc;
  65:Src/main.c    **** 
  66:Src/main.c    **** UART_HandleTypeDef huart3;
  67:Src/main.c    **** 
  68:Src/main.c    **** PCD_HandleTypeDef hpcd_USB_OTG_FS;
  69:Src/main.c    **** 
  70:Src/main.c    **** osThreadId defaultTaskHandle;
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN PV */
  73:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE END PV */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  78:Src/main.c    **** void SystemClock_Config(void);
  79:Src/main.c    **** static void MX_GPIO_Init(void);
  80:Src/main.c    **** static void MX_USART3_UART_Init(void);
  81:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void);
  82:Src/main.c    **** static void MX_RTC_Init(void);
  83:Src/main.c    **** void StartDefaultTask(void const * argument);
  84:Src/main.c    **** 
  85:Src/main.c    **** /* USER CODE BEGIN PFP */
  86:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END PFP */
  89:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 3


  90:Src/main.c    **** /* USER CODE BEGIN 0 */
  91:Src/main.c    **** #define PRINTF_USES_HAL_TX		0
  92:Src/main.c    **** 
  93:Src/main.c    **** int __io_putchar(int ch)
  94:Src/main.c    **** {
  95:Src/main.c    **** 	uint8_t data = ch;
  96:Src/main.c    **** 	#if PRINTF_USES_HAL_TX
  97:Src/main.c    **** 		HAL_StatusTypeDef status = HAL_UART_Transmit(&huart3, (uint8_t*)&data, len, 100);	
  98:Src/main.c    **** 	#else
  99:Src/main.c    **** 		while(__HAL_UART_GET_FLAG(&huart3, UART_FLAG_TXE) == RESET) { ; }
 100:Src/main.c    **** 		huart3.Instance->TDR = (uint16_t)data;
 101:Src/main.c    **** 	#endif
 102:Src/main.c    **** 	return 0;
 103:Src/main.c    **** }
 104:Src/main.c    **** 
 105:Src/main.c    **** char inkey(void)
 106:Src/main.c    **** {
 107:Src/main.c    **** 	uint32_t flags = huart3.Instance->ISR;
 108:Src/main.c    **** 	
 109:Src/main.c    **** 	if((flags & UART_FLAG_RXNE) || (flags & UART_FLAG_ORE))
 110:Src/main.c    **** 	{
 111:Src/main.c    **** 		__HAL_UART_CLEAR_OREFLAG(&huart3);
 112:Src/main.c    **** 		return (huart3.Instance->RDR);
 113:Src/main.c    **** 	}
 114:Src/main.c    **** 	else
 115:Src/main.c    **** 		return 0;
 116:Src/main.c    **** }
 117:Src/main.c    **** struct udp_pcb *pcb;
 118:Src/main.c    **** 
 119:Src/main.c    **** /* USER CODE END 0 */
 120:Src/main.c    **** 
 121:Src/main.c    **** /**
 122:Src/main.c    ****   * @brief  The application entry point.
 123:Src/main.c    ****   *
 124:Src/main.c    ****   * @retval None
 125:Src/main.c    ****   */
 126:Src/main.c    **** int main(void)
 127:Src/main.c    **** {
 128:Src/main.c    ****   /* USER CODE BEGIN 1 */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* USER CODE END 1 */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 135:Src/main.c    ****   HAL_Init();
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* USER CODE BEGIN Init */
 138:Src/main.c    **** 
 139:Src/main.c    ****   /* USER CODE END Init */
 140:Src/main.c    **** 
 141:Src/main.c    ****   /* Configure the system clock */
 142:Src/main.c    ****   SystemClock_Config();
 143:Src/main.c    **** 
 144:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 145:Src/main.c    **** 
 146:Src/main.c    ****   /* USER CODE END SysInit */
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   /* Initialize all configured peripherals */
 149:Src/main.c    ****   MX_GPIO_Init();
 150:Src/main.c    ****   MX_USART3_UART_Init();
 151:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 152:Src/main.c    ****   MX_RTC_Init();
 153:Src/main.c    ****   /* USER CODE BEGIN 2 */
 154:Src/main.c    ****   debug_init(&huart3);
 155:Src/main.c    ****   
 156:Src/main.c    ****   xprintf("Start\n");
 157:Src/main.c    **** 
 158:Src/main.c    ****   /* USER CODE END 2 */
 159:Src/main.c    **** 
 160:Src/main.c    ****   /* USER CODE BEGIN RTOS_MUTEX */
 161:Src/main.c    ****   /* add mutexes, ... */
 162:Src/main.c    ****   /* USER CODE END RTOS_MUTEX */
 163:Src/main.c    **** 
 164:Src/main.c    ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 165:Src/main.c    ****   /* add semaphores, ... */
 166:Src/main.c    ****   /* USER CODE END RTOS_SEMAPHORES */
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN RTOS_TIMERS */
 169:Src/main.c    ****   /* start timers, add new ones, ... */
 170:Src/main.c    ****   /* USER CODE END RTOS_TIMERS */
 171:Src/main.c    **** 
 172:Src/main.c    ****   /* Create the thread(s) */
 173:Src/main.c    ****   /* definition and creation of defaultTask */
 174:Src/main.c    ****   osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);
 175:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE BEGIN RTOS_THREADS */
 178:Src/main.c    ****   /* add threads, ... */
 179:Src/main.c    ****   /* USER CODE END RTOS_THREADS */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE BEGIN RTOS_QUEUES */
 182:Src/main.c    ****   /* add queues, ... */
 183:Src/main.c    ****   /* USER CODE END RTOS_QUEUES */
 184:Src/main.c    ****  
 185:Src/main.c    **** 
 186:Src/main.c    ****   /* Start scheduler */
 187:Src/main.c    ****   osKernelStart();
 188:Src/main.c    ****   
 189:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* Infinite loop */
 192:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 193:Src/main.c    ****   while (1)
 194:Src/main.c    ****   {
 195:Src/main.c    **** 
 196:Src/main.c    ****   /* USER CODE END WHILE */
 197:Src/main.c    **** 
 198:Src/main.c    ****   /* USER CODE BEGIN 3 */
 199:Src/main.c    **** 
 200:Src/main.c    ****   }
 201:Src/main.c    ****   /* USER CODE END 3 */
 202:Src/main.c    **** 
 203:Src/main.c    **** }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 5


 204:Src/main.c    **** 
 205:Src/main.c    **** /**
 206:Src/main.c    ****   * @brief System Clock Configuration
 207:Src/main.c    ****   * @retval None
 208:Src/main.c    ****   */
 209:Src/main.c    **** void SystemClock_Config(void)
 210:Src/main.c    **** {
 211:Src/main.c    **** 
 212:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 213:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 214:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 215:Src/main.c    **** 
 216:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 217:Src/main.c    ****     */
 218:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 219:Src/main.c    **** 
 220:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 221:Src/main.c    **** 
 222:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 223:Src/main.c    ****     */
 224:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 225:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 226:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 232:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 233:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 234:Src/main.c    ****   {
 235:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 236:Src/main.c    ****   }
 237:Src/main.c    **** 
 238:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 239:Src/main.c    ****     */
 240:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 241:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 242:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 243:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 244:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 245:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 246:Src/main.c    **** 
 247:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 250:Src/main.c    ****   }
 251:Src/main.c    **** 
 252:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_USART3
 253:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 254:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 255:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 256:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 257:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 258:Src/main.c    ****   {
 259:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 260:Src/main.c    ****   }
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 6


 261:Src/main.c    **** 
 262:Src/main.c    ****     /**Configure the Systick interrupt time 
 263:Src/main.c    ****     */
 264:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 265:Src/main.c    **** 
 266:Src/main.c    ****     /**Configure the Systick 
 267:Src/main.c    ****     */
 268:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 271:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 272:Src/main.c    **** }
 273:Src/main.c    **** 
 274:Src/main.c    **** /* RTC init function */
 275:Src/main.c    **** static void MX_RTC_Init(void)
 276:Src/main.c    **** {
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 281:Src/main.c    **** 
 282:Src/main.c    ****   RTC_TimeTypeDef sTime;
 283:Src/main.c    ****   RTC_DateTypeDef sDate;
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 288:Src/main.c    **** 
 289:Src/main.c    ****     /**Initialize RTC Only 
 290:Src/main.c    ****     */
 291:Src/main.c    ****   hrtc.Instance = RTC;
 292:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 293:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 294:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 295:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 296:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 297:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 298:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 299:Src/main.c    ****   {
 300:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 301:Src/main.c    ****   }
 302:Src/main.c    **** 
 303:Src/main.c    ****     /**Initialize RTC and set the Time and Date 
 304:Src/main.c    ****     */
 305:Src/main.c    ****   sTime.Hours = 0x0;
 306:Src/main.c    ****   sTime.Minutes = 0x0;
 307:Src/main.c    ****   sTime.Seconds = 0x0;
 308:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 309:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 310:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 311:Src/main.c    ****   {
 312:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 313:Src/main.c    ****   }
 314:Src/main.c    **** 
 315:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 316:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 317:Src/main.c    ****   sDate.Date = 0x1;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 7


 318:Src/main.c    ****   sDate.Year = 0x0;
 319:Src/main.c    **** 
 320:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 321:Src/main.c    ****   {
 322:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 323:Src/main.c    ****   }
 324:Src/main.c    **** 
 325:Src/main.c    ****     /**Enable the TimeStamp 
 326:Src/main.c    ****     */
 327:Src/main.c    ****   if (HAL_RTCEx_SetTimeStamp(&hrtc, RTC_TIMESTAMPEDGE_RISING, RTC_TIMESTAMPPIN_DEFAULT) != HAL_OK)
 328:Src/main.c    ****   {
 329:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 330:Src/main.c    ****   }
 331:Src/main.c    **** 
 332:Src/main.c    **** }
 333:Src/main.c    **** 
 334:Src/main.c    **** /* USART3 init function */
 335:Src/main.c    **** static void MX_USART3_UART_Init(void)
 336:Src/main.c    **** {
 337:Src/main.c    **** 
 338:Src/main.c    ****   huart3.Instance = USART3;
 339:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 340:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 341:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 342:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 343:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 344:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 345:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 346:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 347:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 348:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 349:Src/main.c    ****   {
 350:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 351:Src/main.c    ****   }
 352:Src/main.c    **** 
 353:Src/main.c    **** }
 354:Src/main.c    **** 
 355:Src/main.c    **** /* USB_OTG_FS init function */
 356:Src/main.c    **** static void MX_USB_OTG_FS_PCD_Init(void)
 357:Src/main.c    **** {
 358:Src/main.c    **** 
 359:Src/main.c    ****   hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 360:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 361:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 362:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 363:Src/main.c    ****   hpcd_USB_OTG_FS.Init.ep0_mps = DEP0CTL_MPS_64;
 364:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 365:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 366:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 367:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 368:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 369:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 370:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 371:Src/main.c    ****   {
 372:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 373:Src/main.c    ****   }
 374:Src/main.c    **** 
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 8


 375:Src/main.c    **** }
 376:Src/main.c    **** 
 377:Src/main.c    **** /** Configure pins as 
 378:Src/main.c    ****         * Analog 
 379:Src/main.c    ****         * Input 
 380:Src/main.c    ****         * Output
 381:Src/main.c    ****         * EVENT_OUT
 382:Src/main.c    ****         * EXTI
 383:Src/main.c    **** */
 384:Src/main.c    **** static void MX_GPIO_Init(void)
 385:Src/main.c    **** {
  27              		.loc 1 385 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 48
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 20
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 8DB0     		sub	sp, sp, #52
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 72
  42              	.LBB2:
 386:Src/main.c    **** 
 387:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* GPIO Ports Clock Enable */
 390:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  43              		.loc 1 390 0
  44 0004 314B     		ldr	r3, .L3
  45 0006 1A6B     		ldr	r2, [r3, #48]
  46 0008 42F00402 		orr	r2, r2, #4
  47 000c 1A63     		str	r2, [r3, #48]
  48 000e 1A6B     		ldr	r2, [r3, #48]
  49 0010 02F00402 		and	r2, r2, #4
  50 0014 0192     		str	r2, [sp, #4]
  51 0016 019A     		ldr	r2, [sp, #4]
  52              	.LBE2:
  53              	.LBB3:
 391:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  54              		.loc 1 391 0
  55 0018 1A6B     		ldr	r2, [r3, #48]
  56 001a 42F08002 		orr	r2, r2, #128
  57 001e 1A63     		str	r2, [r3, #48]
  58 0020 1A6B     		ldr	r2, [r3, #48]
  59 0022 02F08002 		and	r2, r2, #128
  60 0026 0292     		str	r2, [sp, #8]
  61 0028 029A     		ldr	r2, [sp, #8]
  62              	.LBE3:
  63              	.LBB4:
 392:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 392 0
  65 002a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 9


  66 002c 42F00102 		orr	r2, r2, #1
  67 0030 1A63     		str	r2, [r3, #48]
  68 0032 1A6B     		ldr	r2, [r3, #48]
  69 0034 02F00102 		and	r2, r2, #1
  70 0038 0392     		str	r2, [sp, #12]
  71 003a 039A     		ldr	r2, [sp, #12]
  72              	.LBE4:
  73              	.LBB5:
 393:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  74              		.loc 1 393 0
  75 003c 1A6B     		ldr	r2, [r3, #48]
  76 003e 42F00202 		orr	r2, r2, #2
  77 0042 1A63     		str	r2, [r3, #48]
  78 0044 1A6B     		ldr	r2, [r3, #48]
  79 0046 02F00202 		and	r2, r2, #2
  80 004a 0492     		str	r2, [sp, #16]
  81 004c 049A     		ldr	r2, [sp, #16]
  82              	.LBE5:
  83              	.LBB6:
 394:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  84              		.loc 1 394 0
  85 004e 1A6B     		ldr	r2, [r3, #48]
  86 0050 42F00802 		orr	r2, r2, #8
  87 0054 1A63     		str	r2, [r3, #48]
  88 0056 1A6B     		ldr	r2, [r3, #48]
  89 0058 02F00802 		and	r2, r2, #8
  90 005c 0592     		str	r2, [sp, #20]
  91 005e 059A     		ldr	r2, [sp, #20]
  92              	.LBE6:
  93              	.LBB7:
 395:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
  94              		.loc 1 395 0
  95 0060 1A6B     		ldr	r2, [r3, #48]
  96 0062 42F04002 		orr	r2, r2, #64
  97 0066 1A63     		str	r2, [r3, #48]
  98 0068 1B6B     		ldr	r3, [r3, #48]
  99 006a 03F04003 		and	r3, r3, #64
 100 006e 0693     		str	r3, [sp, #24]
 101 0070 069B     		ldr	r3, [sp, #24]
 102              	.LBE7:
 396:Src/main.c    **** 
 397:Src/main.c    ****   /*Configure GPIO pin Output Level */
 398:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 103              		.loc 1 398 0
 104 0072 174F     		ldr	r7, .L3+4
 105 0074 0022     		movs	r2, #0
 106 0076 44F28101 		movw	r1, #16513
 107 007a 3846     		mov	r0, r7
 108 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 109              	.LVL0:
 399:Src/main.c    **** 
 400:Src/main.c    ****   /*Configure GPIO pin Output Level */
 401:Src/main.c    ****   HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 110              		.loc 1 401 0
 111 0080 144D     		ldr	r5, .L3+8
 112 0082 0022     		movs	r2, #0
 113 0084 4021     		movs	r1, #64
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 10


 114 0086 2846     		mov	r0, r5
 115 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 116              	.LVL1:
 402:Src/main.c    **** 
 403:Src/main.c    ****   /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
 404:Src/main.c    ****   GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 117              		.loc 1 404 0
 118 008c 44F28103 		movw	r3, #16513
 119 0090 0793     		str	r3, [sp, #28]
 405:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 120              		.loc 1 405 0
 121 0092 0126     		movs	r6, #1
 122 0094 0896     		str	r6, [sp, #32]
 406:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 123              		.loc 1 406 0
 124 0096 0024     		movs	r4, #0
 125 0098 0994     		str	r4, [sp, #36]
 407:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 126              		.loc 1 407 0
 127 009a 0A94     		str	r4, [sp, #40]
 408:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 128              		.loc 1 408 0
 129 009c 07A9     		add	r1, sp, #28
 130 009e 3846     		mov	r0, r7
 131 00a0 FFF7FEFF 		bl	HAL_GPIO_Init
 132              	.LVL2:
 409:Src/main.c    **** 
 410:Src/main.c    ****   /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
 411:Src/main.c    ****   GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 133              		.loc 1 411 0
 134 00a4 4023     		movs	r3, #64
 135 00a6 0793     		str	r3, [sp, #28]
 412:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 136              		.loc 1 412 0
 137 00a8 0896     		str	r6, [sp, #32]
 413:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 138              		.loc 1 413 0
 139 00aa 0994     		str	r4, [sp, #36]
 414:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 140              		.loc 1 414 0
 141 00ac 0A94     		str	r4, [sp, #40]
 415:Src/main.c    ****   HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 142              		.loc 1 415 0
 143 00ae 07A9     		add	r1, sp, #28
 144 00b0 2846     		mov	r0, r5
 145 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 416:Src/main.c    **** 
 417:Src/main.c    ****   /*Configure GPIO pin : USB_OverCurrent_Pin */
 418:Src/main.c    ****   GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 147              		.loc 1 418 0
 148 00b6 8023     		movs	r3, #128
 149 00b8 0793     		str	r3, [sp, #28]
 419:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 150              		.loc 1 419 0
 151 00ba 0894     		str	r4, [sp, #32]
 420:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 11


 152              		.loc 1 420 0
 153 00bc 0994     		str	r4, [sp, #36]
 421:Src/main.c    ****   HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 154              		.loc 1 421 0
 155 00be 07A9     		add	r1, sp, #28
 156 00c0 2846     		mov	r0, r5
 157 00c2 FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL4:
 422:Src/main.c    **** 
 423:Src/main.c    **** }
 159              		.loc 1 423 0
 160 00c6 0DB0     		add	sp, sp, #52
 161              	.LCFI2:
 162              		.cfi_def_cfa_offset 20
 163              		@ sp needed
 164 00c8 F0BD     		pop	{r4, r5, r6, r7, pc}
 165              	.L4:
 166 00ca 00BF     		.align	2
 167              	.L3:
 168 00cc 00380240 		.word	1073887232
 169 00d0 00040240 		.word	1073873920
 170 00d4 00180240 		.word	1073879040
 171              		.cfi_endproc
 172              	.LFE164:
 174              		.section	.text.__io_putchar,"ax",%progbits
 175              		.align	1
 176              		.global	__io_putchar
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv5-sp-d16
 182              	__io_putchar:
 183              	.LFB157:
  94:Src/main.c    **** 	uint8_t data = ch;
 184              		.loc 1 94 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189              	.LVL5:
 190              	.L6:
  99:Src/main.c    **** 		huart3.Instance->TDR = (uint16_t)data;
 191              		.loc 1 99 0 discriminator 1
 192 0000 044B     		ldr	r3, .L7
 193 0002 1B68     		ldr	r3, [r3]
 194 0004 DA69     		ldr	r2, [r3, #28]
 195 0006 12F0800F 		tst	r2, #128
 196 000a F9D0     		beq	.L6
 100:Src/main.c    **** 	#endif
 197              		.loc 1 100 0
 198 000c C0B2     		uxtb	r0, r0
 199              	.LVL6:
 200 000e 9862     		str	r0, [r3, #40]
 103:Src/main.c    **** 
 201              		.loc 1 103 0
 202 0010 0020     		movs	r0, #0
 203 0012 7047     		bx	lr
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 12


 204              	.L8:
 205              		.align	2
 206              	.L7:
 207 0014 00000000 		.word	huart3
 208              		.cfi_endproc
 209              	.LFE157:
 211              		.section	.text.inkey,"ax",%progbits
 212              		.align	1
 213              		.global	inkey
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 217              		.fpu fpv5-sp-d16
 219              	inkey:
 220              	.LFB158:
 106:Src/main.c    **** 	uint32_t flags = huart3.Instance->ISR;
 221              		.loc 1 106 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 107:Src/main.c    **** 	
 226              		.loc 1 107 0
 227 0000 064B     		ldr	r3, .L12
 228 0002 1B68     		ldr	r3, [r3]
 229 0004 DA69     		ldr	r2, [r3, #28]
 230              	.LVL7:
 109:Src/main.c    **** 	{
 231              		.loc 1 109 0
 232 0006 12F0280F 		tst	r2, #40
 233 000a 04D0     		beq	.L11
 111:Src/main.c    **** 		return (huart3.Instance->RDR);
 234              		.loc 1 111 0
 235 000c 0822     		movs	r2, #8
 236              	.LVL8:
 237 000e 1A62     		str	r2, [r3, #32]
 112:Src/main.c    **** 	}
 238              		.loc 1 112 0
 239 0010 586A     		ldr	r0, [r3, #36]
 240 0012 C0B2     		uxtb	r0, r0
 241 0014 7047     		bx	lr
 242              	.LVL9:
 243              	.L11:
 115:Src/main.c    **** }
 244              		.loc 1 115 0
 245 0016 0020     		movs	r0, #0
 116:Src/main.c    **** struct udp_pcb *pcb;
 246              		.loc 1 116 0
 247 0018 7047     		bx	lr
 248              	.L13:
 249 001a 00BF     		.align	2
 250              	.L12:
 251 001c 00000000 		.word	huart3
 252              		.cfi_endproc
 253              	.LFE158:
 255              		.section	.text.StartDefaultTask,"ax",%progbits
 256              		.align	1
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 13


 257              		.global	StartDefaultTask
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv5-sp-d16
 263              	StartDefaultTask:
 264              	.LFB165:
 424:Src/main.c    **** 
 425:Src/main.c    **** /* USER CODE BEGIN 4 */
 426:Src/main.c    **** 
 427:Src/main.c    **** /* USER CODE END 4 */
 428:Src/main.c    **** 
 429:Src/main.c    **** /* USER CODE BEGIN Header_StartDefaultTask */
 430:Src/main.c    **** /**
 431:Src/main.c    ****   * @brief  Function implementing the defaultTask thread.
 432:Src/main.c    ****   * @param  argument: Not used 
 433:Src/main.c    ****   * @retval None
 434:Src/main.c    ****   */
 435:Src/main.c    **** /* USER CODE END Header_StartDefaultTask */
 436:Src/main.c    **** void StartDefaultTask(void const * argument)
 437:Src/main.c    **** {
 265              		.loc 1 437 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              	.LVL10:
 270 0000 38B5     		push	{r3, r4, r5, lr}
 271              	.LCFI3:
 272              		.cfi_def_cfa_offset 16
 273              		.cfi_offset 3, -16
 274              		.cfi_offset 4, -12
 275              		.cfi_offset 5, -8
 276              		.cfi_offset 14, -4
 438:Src/main.c    ****   /* init code for LWIP */
 439:Src/main.c    ****   MX_LWIP_Init();
 277              		.loc 1 439 0
 278 0002 FFF7FEFF 		bl	MX_LWIP_Init
 279              	.LVL11:
 440:Src/main.c    **** 
 441:Src/main.c    **** 
 442:Src/main.c    ****   /* USER CODE BEGIN 5 */
 443:Src/main.c    ****   pcb = udp_new();
 280              		.loc 1 443 0
 281 0006 FFF7FEFF 		bl	udp_new
 282              	.LVL12:
 283 000a 1B4C     		ldr	r4, .L19
 284 000c 2060     		str	r0, [r4]
 444:Src/main.c    ****   ip_set_option(pcb, SOF_BROADCAST);
 285              		.loc 1 444 0
 286 000e 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 287 0010 42F02002 		orr	r2, r2, #32
 288 0014 0272     		strb	r2, [r0, #8]
 445:Src/main.c    ****   udp_bind(pcb, IP_ADDR_ANY, 0);
 289              		.loc 1 445 0
 290 0016 194D     		ldr	r5, .L19+4
 291 0018 0022     		movs	r2, #0
 292 001a 2946     		mov	r1, r5
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 14


 293 001c FFF7FEFF 		bl	udp_bind
 294              	.LVL13:
 446:Src/main.c    ****   udp_connect(pcb, IP_ADDR_ANY, 10);
 295              		.loc 1 446 0
 296 0020 0A22     		movs	r2, #10
 297 0022 2946     		mov	r1, r5
 298 0024 2068     		ldr	r0, [r4]
 299 0026 FFF7FEFF 		bl	udp_connect
 300              	.LVL14:
 447:Src/main.c    ****   xprintf("Default task start\n");
 301              		.loc 1 447 0
 302 002a 1548     		ldr	r0, .L19+8
 303 002c FFF7FEFF 		bl	xprintf
 304              	.LVL15:
 448:Src/main.c    ****   struct pbuf *A = pbuf_alloc(PBUF_TRANSPORT, 1024, PBUF_RAM);
 305              		.loc 1 448 0
 306 0030 0022     		movs	r2, #0
 307 0032 4FF48061 		mov	r1, #1024
 308 0036 1046     		mov	r0, r2
 309 0038 FFF7FEFF 		bl	pbuf_alloc
 310              	.LVL16:
 311 003c 0446     		mov	r4, r0
 312              	.LVL17:
 313 003e 05E0     		b	.L17
 314              	.LVL18:
 315              	.L16:
 316              	.LBB8:
 317              	.LBB9:
 449:Src/main.c    ****   /* Infinite loop */
 450:Src/main.c    ****   for(;;){
 451:Src/main.c    **** 	char key = inkey();
 452:Src/main.c    **** 	if(key){
 453:Src/main.c    **** 		xprintf("%c\n", key);
 454:Src/main.c    **** 		err_t E = udp_sendto(pcb, A, IP_ADDR_BROADCAST, 10);
 455:Src/main.c    **** 		if(E == ERR_OK){
 456:Src/main.c    **** 			xprintf("OK\n");
 457:Src/main.c    **** 		}
 458:Src/main.c    **** 		else {
 459:Src/main.c    **** 			xprintf("%d\n", E);
 318              		.loc 1 459 0
 319 0040 1048     		ldr	r0, .L19+12
 320              	.LVL19:
 321 0042 FFF7FEFF 		bl	xprintf
 322              	.LVL20:
 323              	.L15:
 324              	.LBE9:
 460:Src/main.c    **** 		}
 461:Src/main.c    **** 	}
 462:Src/main.c    **** 	osDelay(100);
 325              		.loc 1 462 0
 326 0046 6420     		movs	r0, #100
 327 0048 FFF7FEFF 		bl	osDelay
 328              	.LVL21:
 329              	.L17:
 451:Src/main.c    **** 	if(key){
 330              		.loc 1 451 0
 331 004c FFF7FEFF 		bl	inkey
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 15


 332              	.LVL22:
 452:Src/main.c    **** 		xprintf("%c\n", key);
 333              		.loc 1 452 0
 334 0050 0146     		mov	r1, r0
 335 0052 0028     		cmp	r0, #0
 336 0054 F7D0     		beq	.L15
 337              	.LBB10:
 453:Src/main.c    **** 		err_t E = udp_sendto(pcb, A, IP_ADDR_BROADCAST, 10);
 338              		.loc 1 453 0
 339 0056 0C48     		ldr	r0, .L19+16
 340              	.LVL23:
 341 0058 FFF7FEFF 		bl	xprintf
 342              	.LVL24:
 454:Src/main.c    **** 		if(E == ERR_OK){
 343              		.loc 1 454 0
 344 005c 0A23     		movs	r3, #10
 345 005e 0B4A     		ldr	r2, .L19+20
 346 0060 2146     		mov	r1, r4
 347 0062 0548     		ldr	r0, .L19
 348 0064 0068     		ldr	r0, [r0]
 349 0066 FFF7FEFF 		bl	udp_sendto
 350              	.LVL25:
 455:Src/main.c    **** 			xprintf("OK\n");
 351              		.loc 1 455 0
 352 006a 0146     		mov	r1, r0
 353 006c 0028     		cmp	r0, #0
 354 006e E7D1     		bne	.L16
 456:Src/main.c    **** 		}
 355              		.loc 1 456 0
 356 0070 0748     		ldr	r0, .L19+24
 357              	.LVL26:
 358 0072 FFF7FEFF 		bl	xprintf
 359              	.LVL27:
 360 0076 E6E7     		b	.L15
 361              	.L20:
 362              		.align	2
 363              	.L19:
 364 0078 00000000 		.word	pcb
 365 007c 00000000 		.word	ip_addr_any
 366 0080 00000000 		.word	.LC2
 367 0084 1C000000 		.word	.LC5
 368 0088 14000000 		.word	.LC3
 369 008c 00000000 		.word	ip_addr_broadcast
 370 0090 18000000 		.word	.LC4
 371              	.LBE10:
 372              	.LBE8:
 373              		.cfi_endproc
 374              	.LFE165:
 376              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 377              		.align	1
 378              		.global	HAL_TIM_PeriodElapsedCallback
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv5-sp-d16
 384              	HAL_TIM_PeriodElapsedCallback:
 385              	.LFB166:
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 16


 463:Src/main.c    ****   }
 464:Src/main.c    **** 
 465:Src/main.c    ****   /* USER CODE END 5 */ 
 466:Src/main.c    **** }
 467:Src/main.c    **** 
 468:Src/main.c    **** /**
 469:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
 470:Src/main.c    ****   * @note   This function is called  when TIM1 interrupt took place, inside
 471:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 472:Src/main.c    ****   * a global variable "uwTick" used as application time base.
 473:Src/main.c    ****   * @param  htim : TIM handle
 474:Src/main.c    ****   * @retval None
 475:Src/main.c    ****   */
 476:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 477:Src/main.c    **** {
 386              		.loc 1 477 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 0
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390              	.LVL28:
 391 0000 08B5     		push	{r3, lr}
 392              	.LCFI4:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 478:Src/main.c    ****   /* USER CODE BEGIN Callback 0 */
 479:Src/main.c    **** 
 480:Src/main.c    ****   /* USER CODE END Callback 0 */
 481:Src/main.c    ****   if (htim->Instance == TIM1) {
 396              		.loc 1 481 0
 397 0002 0268     		ldr	r2, [r0]
 398 0004 034B     		ldr	r3, .L25
 399 0006 9A42     		cmp	r2, r3
 400 0008 00D0     		beq	.L24
 401              	.LVL29:
 402              	.L21:
 403 000a 08BD     		pop	{r3, pc}
 404              	.LVL30:
 405              	.L24:
 482:Src/main.c    ****     HAL_IncTick();
 406              		.loc 1 482 0
 407 000c FFF7FEFF 		bl	HAL_IncTick
 408              	.LVL31:
 483:Src/main.c    ****   }
 484:Src/main.c    ****   /* USER CODE BEGIN Callback 1 */
 485:Src/main.c    **** 
 486:Src/main.c    ****   /* USER CODE END Callback 1 */
 487:Src/main.c    **** }
 409              		.loc 1 487 0
 410 0010 FBE7     		b	.L21
 411              	.L26:
 412 0012 00BF     		.align	2
 413              	.L25:
 414 0014 00000140 		.word	1073807360
 415              		.cfi_endproc
 416              	.LFE166:
 418              		.section	.text._Error_Handler,"ax",%progbits
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 17


 419              		.align	1
 420              		.global	_Error_Handler
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu fpv5-sp-d16
 426              	_Error_Handler:
 427              	.LFB167:
 488:Src/main.c    **** 
 489:Src/main.c    **** /**
 490:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 491:Src/main.c    ****   * @param  file: The file name as string.
 492:Src/main.c    ****   * @param  line: The line in file as a number.
 493:Src/main.c    ****   * @retval None
 494:Src/main.c    ****   */
 495:Src/main.c    **** void _Error_Handler(char *file, int line)
 496:Src/main.c    **** {
 428              		.loc 1 496 0
 429              		.cfi_startproc
 430              		@ Volatile: function does not return.
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434              	.LVL32:
 435              	.L28:
 436 0000 FEE7     		b	.L28
 437              		.cfi_endproc
 438              	.LFE167:
 440              		.section	.text.MX_USART3_UART_Init,"ax",%progbits
 441              		.align	1
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu fpv5-sp-d16
 447              	MX_USART3_UART_Init:
 448              	.LFB162:
 336:Src/main.c    **** 
 449              		.loc 1 336 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 336:Src/main.c    **** 
 453              		.loc 1 336 0
 454 0000 08B5     		push	{r3, lr}
 455              	.LCFI5:
 456              		.cfi_def_cfa_offset 8
 457              		.cfi_offset 3, -8
 458              		.cfi_offset 14, -4
 338:Src/main.c    ****   huart3.Init.BaudRate = 115200;
 459              		.loc 1 338 0
 460 0002 0C48     		ldr	r0, .L33
 461 0004 0C4B     		ldr	r3, .L33+4
 462 0006 0360     		str	r3, [r0]
 339:Src/main.c    ****   huart3.Init.WordLength = UART_WORDLENGTH_8B;
 463              		.loc 1 339 0
 464 0008 4FF4E133 		mov	r3, #115200
 465 000c 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 18


 340:Src/main.c    ****   huart3.Init.StopBits = UART_STOPBITS_1;
 466              		.loc 1 340 0
 467 000e 0023     		movs	r3, #0
 468 0010 8360     		str	r3, [r0, #8]
 341:Src/main.c    ****   huart3.Init.Parity = UART_PARITY_NONE;
 469              		.loc 1 341 0
 470 0012 C360     		str	r3, [r0, #12]
 342:Src/main.c    ****   huart3.Init.Mode = UART_MODE_TX_RX;
 471              		.loc 1 342 0
 472 0014 0361     		str	r3, [r0, #16]
 343:Src/main.c    ****   huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 473              		.loc 1 343 0
 474 0016 0C22     		movs	r2, #12
 475 0018 4261     		str	r2, [r0, #20]
 344:Src/main.c    ****   huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 476              		.loc 1 344 0
 477 001a 8361     		str	r3, [r0, #24]
 345:Src/main.c    ****   huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 478              		.loc 1 345 0
 479 001c C361     		str	r3, [r0, #28]
 346:Src/main.c    ****   huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 480              		.loc 1 346 0
 481 001e 0362     		str	r3, [r0, #32]
 347:Src/main.c    ****   if (HAL_UART_Init(&huart3) != HAL_OK)
 482              		.loc 1 347 0
 483 0020 4362     		str	r3, [r0, #36]
 348:Src/main.c    ****   {
 484              		.loc 1 348 0
 485 0022 FFF7FEFF 		bl	HAL_UART_Init
 486              	.LVL33:
 487 0026 00B9     		cbnz	r0, .L32
 488 0028 08BD     		pop	{r3, pc}
 489              	.L32:
 350:Src/main.c    ****   }
 490              		.loc 1 350 0
 491 002a 4FF4AF71 		mov	r1, #350
 492 002e 0348     		ldr	r0, .L33+8
 493 0030 FFF7FEFF 		bl	_Error_Handler
 494              	.LVL34:
 495              	.L34:
 496              		.align	2
 497              	.L33:
 498 0034 00000000 		.word	huart3
 499 0038 00480040 		.word	1073760256
 500 003c 00000000 		.word	.LC6
 501              		.cfi_endproc
 502              	.LFE162:
 504              		.section	.text.MX_USB_OTG_FS_PCD_Init,"ax",%progbits
 505              		.align	1
 506              		.syntax unified
 507              		.thumb
 508              		.thumb_func
 509              		.fpu fpv5-sp-d16
 511              	MX_USB_OTG_FS_PCD_Init:
 512              	.LFB163:
 357:Src/main.c    **** 
 513              		.loc 1 357 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 19


 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517 0000 08B5     		push	{r3, lr}
 518              	.LCFI6:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 3, -8
 521              		.cfi_offset 14, -4
 359:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 522              		.loc 1 359 0
 523 0002 0D48     		ldr	r0, .L39
 524 0004 4FF0A043 		mov	r3, #1342177280
 525 0008 0360     		str	r3, [r0]
 360:Src/main.c    ****   hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 526              		.loc 1 360 0
 527 000a 0623     		movs	r3, #6
 528 000c 4360     		str	r3, [r0, #4]
 361:Src/main.c    ****   hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 529              		.loc 1 361 0
 530 000e 0222     		movs	r2, #2
 531 0010 C260     		str	r2, [r0, #12]
 362:Src/main.c    ****   hpcd_USB_OTG_FS.Init.ep0_mps = DEP0CTL_MPS_64;
 532              		.loc 1 362 0
 533 0012 0023     		movs	r3, #0
 534 0014 0361     		str	r3, [r0, #16]
 363:Src/main.c    ****   hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 535              		.loc 1 363 0
 536 0016 4361     		str	r3, [r0, #20]
 364:Src/main.c    ****   hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 537              		.loc 1 364 0
 538 0018 8261     		str	r2, [r0, #24]
 365:Src/main.c    ****   hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 539              		.loc 1 365 0
 540 001a 0122     		movs	r2, #1
 541 001c C261     		str	r2, [r0, #28]
 366:Src/main.c    ****   hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 542              		.loc 1 366 0
 543 001e 0362     		str	r3, [r0, #32]
 367:Src/main.c    ****   hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 544              		.loc 1 367 0
 545 0020 4362     		str	r3, [r0, #36]
 368:Src/main.c    ****   hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 546              		.loc 1 368 0
 547 0022 C262     		str	r2, [r0, #44]
 369:Src/main.c    ****   if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 548              		.loc 1 369 0
 549 0024 0363     		str	r3, [r0, #48]
 370:Src/main.c    ****   {
 550              		.loc 1 370 0
 551 0026 FFF7FEFF 		bl	HAL_PCD_Init
 552              	.LVL35:
 553 002a 00B9     		cbnz	r0, .L38
 554 002c 08BD     		pop	{r3, pc}
 555              	.L38:
 372:Src/main.c    ****   }
 556              		.loc 1 372 0
 557 002e 4FF4BA71 		mov	r1, #372
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 20


 558 0032 0248     		ldr	r0, .L39+4
 559 0034 FFF7FEFF 		bl	_Error_Handler
 560              	.LVL36:
 561              	.L40:
 562              		.align	2
 563              	.L39:
 564 0038 00000000 		.word	hpcd_USB_OTG_FS
 565 003c 00000000 		.word	.LC6
 566              		.cfi_endproc
 567              	.LFE163:
 569              		.section	.text.MX_RTC_Init,"ax",%progbits
 570              		.align	1
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 574              		.fpu fpv5-sp-d16
 576              	MX_RTC_Init:
 577              	.LFB161:
 276:Src/main.c    **** 
 578              		.loc 1 276 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 32
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582 0000 00B5     		push	{lr}
 583              	.LCFI7:
 584              		.cfi_def_cfa_offset 4
 585              		.cfi_offset 14, -4
 586 0002 89B0     		sub	sp, sp, #36
 587              	.LCFI8:
 588              		.cfi_def_cfa_offset 40
 291:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 589              		.loc 1 291 0
 590 0004 2448     		ldr	r0, .L51
 591 0006 254B     		ldr	r3, .L51+4
 592 0008 0360     		str	r3, [r0]
 292:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 593              		.loc 1 292 0
 594 000a 0023     		movs	r3, #0
 595 000c 4360     		str	r3, [r0, #4]
 293:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 596              		.loc 1 293 0
 597 000e 7F22     		movs	r2, #127
 598 0010 8260     		str	r2, [r0, #8]
 294:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 599              		.loc 1 294 0
 600 0012 FF22     		movs	r2, #255
 601 0014 C260     		str	r2, [r0, #12]
 295:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 602              		.loc 1 295 0
 603 0016 0361     		str	r3, [r0, #16]
 296:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 604              		.loc 1 296 0
 605 0018 4361     		str	r3, [r0, #20]
 297:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 606              		.loc 1 297 0
 607 001a 8361     		str	r3, [r0, #24]
 298:Src/main.c    ****   {
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 21


 608              		.loc 1 298 0
 609 001c FFF7FEFF 		bl	HAL_RTC_Init
 610              	.LVL37:
 611 0020 30BB     		cbnz	r0, .L47
 305:Src/main.c    ****   sTime.Minutes = 0x0;
 612              		.loc 1 305 0
 613 0022 0023     		movs	r3, #0
 614 0024 8DF80830 		strb	r3, [sp, #8]
 306:Src/main.c    ****   sTime.Seconds = 0x0;
 615              		.loc 1 306 0
 616 0028 8DF80930 		strb	r3, [sp, #9]
 307:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 617              		.loc 1 307 0
 618 002c 8DF80A30 		strb	r3, [sp, #10]
 308:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 619              		.loc 1 308 0
 620 0030 0693     		str	r3, [sp, #24]
 309:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 621              		.loc 1 309 0
 622 0032 0793     		str	r3, [sp, #28]
 310:Src/main.c    ****   {
 623              		.loc 1 310 0
 624 0034 0122     		movs	r2, #1
 625 0036 02A9     		add	r1, sp, #8
 626 0038 1748     		ldr	r0, .L51
 627 003a FFF7FEFF 		bl	HAL_RTC_SetTime
 628              	.LVL38:
 629 003e E0B9     		cbnz	r0, .L48
 315:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 630              		.loc 1 315 0
 631 0040 0122     		movs	r2, #1
 632 0042 8DF80420 		strb	r2, [sp, #4]
 316:Src/main.c    ****   sDate.Date = 0x1;
 633              		.loc 1 316 0
 634 0046 8DF80520 		strb	r2, [sp, #5]
 317:Src/main.c    ****   sDate.Year = 0x0;
 635              		.loc 1 317 0
 636 004a 8DF80620 		strb	r2, [sp, #6]
 318:Src/main.c    **** 
 637              		.loc 1 318 0
 638 004e 0023     		movs	r3, #0
 639 0050 8DF80730 		strb	r3, [sp, #7]
 320:Src/main.c    ****   {
 640              		.loc 1 320 0
 641 0054 01A9     		add	r1, sp, #4
 642 0056 1048     		ldr	r0, .L51
 643 0058 FFF7FEFF 		bl	HAL_RTC_SetDate
 644              	.LVL39:
 645 005c 90B9     		cbnz	r0, .L49
 327:Src/main.c    ****   {
 646              		.loc 1 327 0
 647 005e 0022     		movs	r2, #0
 648 0060 1146     		mov	r1, r2
 649 0062 0D48     		ldr	r0, .L51
 650 0064 FFF7FEFF 		bl	HAL_RTCEx_SetTimeStamp
 651              	.LVL40:
 652 0068 88B9     		cbnz	r0, .L50
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 22


 332:Src/main.c    **** 
 653              		.loc 1 332 0
 654 006a 09B0     		add	sp, sp, #36
 655              	.LCFI9:
 656              		.cfi_remember_state
 657              		.cfi_def_cfa_offset 4
 658              		@ sp needed
 659 006c 5DF804FB 		ldr	pc, [sp], #4
 660              	.L47:
 661              	.LCFI10:
 662              		.cfi_restore_state
 300:Src/main.c    ****   }
 663              		.loc 1 300 0
 664 0070 4FF49671 		mov	r1, #300
 665 0074 0A48     		ldr	r0, .L51+8
 666 0076 FFF7FEFF 		bl	_Error_Handler
 667              	.LVL41:
 668              	.L48:
 312:Src/main.c    ****   }
 669              		.loc 1 312 0
 670 007a 4FF49C71 		mov	r1, #312
 671 007e 0848     		ldr	r0, .L51+8
 672 0080 FFF7FEFF 		bl	_Error_Handler
 673              	.LVL42:
 674              	.L49:
 322:Src/main.c    ****   }
 675              		.loc 1 322 0
 676 0084 4FF4A171 		mov	r1, #322
 677 0088 0548     		ldr	r0, .L51+8
 678 008a FFF7FEFF 		bl	_Error_Handler
 679              	.LVL43:
 680              	.L50:
 329:Src/main.c    ****   }
 681              		.loc 1 329 0
 682 008e 40F24911 		movw	r1, #329
 683 0092 0348     		ldr	r0, .L51+8
 684 0094 FFF7FEFF 		bl	_Error_Handler
 685              	.LVL44:
 686              	.L52:
 687              		.align	2
 688              	.L51:
 689 0098 00000000 		.word	hrtc
 690 009c 00280040 		.word	1073752064
 691 00a0 00000000 		.word	.LC6
 692              		.cfi_endproc
 693              	.LFE161:
 695              		.section	.text.SystemClock_Config,"ax",%progbits
 696              		.align	1
 697              		.global	SystemClock_Config
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv5-sp-d16
 703              	SystemClock_Config:
 704              	.LFB160:
 210:Src/main.c    **** 
 705              		.loc 1 210 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 23


 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 208
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 00B5     		push	{lr}
 710              	.LCFI11:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 14, -4
 713 0002 B5B0     		sub	sp, sp, #212
 714              	.LCFI12:
 715              		.cfi_def_cfa_offset 216
 716              	.LBB11:
 218:Src/main.c    **** 
 717              		.loc 1 218 0
 718 0004 334B     		ldr	r3, .L61
 719 0006 1A6C     		ldr	r2, [r3, #64]
 720 0008 42F08052 		orr	r2, r2, #268435456
 721 000c 1A64     		str	r2, [r3, #64]
 722 000e 1B6C     		ldr	r3, [r3, #64]
 723 0010 03F08053 		and	r3, r3, #268435456
 724 0014 0093     		str	r3, [sp]
 725 0016 009B     		ldr	r3, [sp]
 726              	.LBE11:
 727              	.LBB12:
 220:Src/main.c    **** 
 728              		.loc 1 220 0
 729 0018 2F4A     		ldr	r2, .L61+4
 730 001a 1368     		ldr	r3, [r2]
 731 001c 23F44043 		bic	r3, r3, #49152
 732 0020 43F48043 		orr	r3, r3, #16384
 733 0024 1360     		str	r3, [r2]
 734 0026 1368     		ldr	r3, [r2]
 735 0028 03F44043 		and	r3, r3, #49152
 736 002c 0193     		str	r3, [sp, #4]
 737 002e 019B     		ldr	r3, [sp, #4]
 738              	.LBE12:
 224:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 739              		.loc 1 224 0
 740 0030 0923     		movs	r3, #9
 741 0032 2893     		str	r3, [sp, #160]
 225:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 742              		.loc 1 225 0
 743 0034 4FF4A023 		mov	r3, #327680
 744 0038 2993     		str	r3, [sp, #164]
 226:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 745              		.loc 1 226 0
 746 003a 0123     		movs	r3, #1
 747 003c 2D93     		str	r3, [sp, #180]
 227:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 748              		.loc 1 227 0
 749 003e 0223     		movs	r3, #2
 750 0040 2E93     		str	r3, [sp, #184]
 228:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 751              		.loc 1 228 0
 752 0042 4FF48002 		mov	r2, #4194304
 753 0046 2F92     		str	r2, [sp, #188]
 229:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 72;
 754              		.loc 1 229 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 24


 755 0048 0422     		movs	r2, #4
 756 004a 3092     		str	r2, [sp, #192]
 230:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 757              		.loc 1 230 0
 758 004c 4822     		movs	r2, #72
 759 004e 3192     		str	r2, [sp, #196]
 231:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 3;
 760              		.loc 1 231 0
 761 0050 3293     		str	r3, [sp, #200]
 232:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 762              		.loc 1 232 0
 763 0052 0323     		movs	r3, #3
 764 0054 3393     		str	r3, [sp, #204]
 233:Src/main.c    ****   {
 765              		.loc 1 233 0
 766 0056 28A8     		add	r0, sp, #160
 767 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 768              	.LVL45:
 769 005c 68BB     		cbnz	r0, .L58
 240:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 770              		.loc 1 240 0
 771 005e 0F23     		movs	r3, #15
 772 0060 2393     		str	r3, [sp, #140]
 242:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 773              		.loc 1 242 0
 774 0062 0221     		movs	r1, #2
 775 0064 2491     		str	r1, [sp, #144]
 243:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 776              		.loc 1 243 0
 777 0066 0023     		movs	r3, #0
 778 0068 2593     		str	r3, [sp, #148]
 244:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 779              		.loc 1 244 0
 780 006a 4FF48052 		mov	r2, #4096
 781 006e 2692     		str	r2, [sp, #152]
 245:Src/main.c    **** 
 782              		.loc 1 245 0
 783 0070 2793     		str	r3, [sp, #156]
 247:Src/main.c    ****   {
 784              		.loc 1 247 0
 785 0072 23A8     		add	r0, sp, #140
 786 0074 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 787              	.LVL46:
 788 0078 18BB     		cbnz	r0, .L59
 252:Src/main.c    ****                               |RCC_PERIPHCLK_CLK48;
 789              		.loc 1 252 0
 790 007a 184B     		ldr	r3, .L61+8
 791 007c 0293     		str	r3, [sp, #8]
 254:Src/main.c    ****   PeriphClkInitStruct.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 792              		.loc 1 254 0
 793 007e 4FF40073 		mov	r3, #512
 794 0082 0E93     		str	r3, [sp, #56]
 255:Src/main.c    ****   PeriphClkInitStruct.Clk48ClockSelection = RCC_CLK48SOURCE_PLL;
 795              		.loc 1 255 0
 796 0084 0023     		movs	r3, #0
 797 0086 1593     		str	r3, [sp, #84]
 256:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 25


 798              		.loc 1 256 0
 799 0088 2193     		str	r3, [sp, #132]
 257:Src/main.c    ****   {
 800              		.loc 1 257 0
 801 008a 02A8     		add	r0, sp, #8
 802 008c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 803              	.LVL47:
 804 0090 D8B9     		cbnz	r0, .L60
 264:Src/main.c    **** 
 805              		.loc 1 264 0
 806 0092 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 807              	.LVL48:
 808 0096 124B     		ldr	r3, .L61+12
 809 0098 A3FB0030 		umull	r3, r0, r3, r0
 810 009c 8009     		lsrs	r0, r0, #6
 811 009e FFF7FEFF 		bl	HAL_SYSTICK_Config
 812              	.LVL49:
 268:Src/main.c    **** 
 813              		.loc 1 268 0
 814 00a2 0420     		movs	r0, #4
 815 00a4 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 816              	.LVL50:
 271:Src/main.c    **** }
 817              		.loc 1 271 0
 818 00a8 0022     		movs	r2, #0
 819 00aa 0F21     		movs	r1, #15
 820 00ac 4FF0FF30 		mov	r0, #-1
 821 00b0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 822              	.LVL51:
 272:Src/main.c    **** 
 823              		.loc 1 272 0
 824 00b4 35B0     		add	sp, sp, #212
 825              	.LCFI13:
 826              		.cfi_remember_state
 827              		.cfi_def_cfa_offset 4
 828              		@ sp needed
 829 00b6 5DF804FB 		ldr	pc, [sp], #4
 830              	.L58:
 831              	.LCFI14:
 832              		.cfi_restore_state
 235:Src/main.c    ****   }
 833              		.loc 1 235 0
 834 00ba EB21     		movs	r1, #235
 835 00bc 0948     		ldr	r0, .L61+16
 836 00be FFF7FEFF 		bl	_Error_Handler
 837              	.LVL52:
 838              	.L59:
 249:Src/main.c    ****   }
 839              		.loc 1 249 0
 840 00c2 F921     		movs	r1, #249
 841 00c4 0748     		ldr	r0, .L61+16
 842 00c6 FFF7FEFF 		bl	_Error_Handler
 843              	.LVL53:
 844              	.L60:
 259:Src/main.c    ****   }
 845              		.loc 1 259 0
 846 00ca 40F20311 		movw	r1, #259
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 26


 847 00ce 0548     		ldr	r0, .L61+16
 848 00d0 FFF7FEFF 		bl	_Error_Handler
 849              	.LVL54:
 850              	.L62:
 851              		.align	2
 852              	.L61:
 853 00d4 00380240 		.word	1073887232
 854 00d8 00700040 		.word	1073770496
 855 00dc 20012000 		.word	2097440
 856 00e0 D34D6210 		.word	274877907
 857 00e4 00000000 		.word	.LC6
 858              		.cfi_endproc
 859              	.LFE160:
 861              		.section	.text.main,"ax",%progbits
 862              		.align	1
 863              		.global	main
 864              		.syntax unified
 865              		.thumb
 866              		.thumb_func
 867              		.fpu fpv5-sp-d16
 869              	main:
 870              	.LFB159:
 127:Src/main.c    ****   /* USER CODE BEGIN 1 */
 871              		.loc 1 127 0
 872              		.cfi_startproc
 873              		@ Volatile: function does not return.
 874              		@ args = 0, pretend = 0, frame = 24
 875              		@ frame_needed = 0, uses_anonymous_args = 0
 876 0000 00B5     		push	{lr}
 877              	.LCFI15:
 878              		.cfi_def_cfa_offset 4
 879              		.cfi_offset 14, -4
 880 0002 87B0     		sub	sp, sp, #28
 881              	.LCFI16:
 882              		.cfi_def_cfa_offset 32
 135:Src/main.c    **** 
 883              		.loc 1 135 0
 884 0004 FFF7FEFF 		bl	HAL_Init
 885              	.LVL55:
 142:Src/main.c    **** 
 886              		.loc 1 142 0
 887 0008 FFF7FEFF 		bl	SystemClock_Config
 888              	.LVL56:
 149:Src/main.c    ****   MX_USART3_UART_Init();
 889              		.loc 1 149 0
 890 000c FFF7FEFF 		bl	MX_GPIO_Init
 891              	.LVL57:
 150:Src/main.c    ****   MX_USB_OTG_FS_PCD_Init();
 892              		.loc 1 150 0
 893 0010 FFF7FEFF 		bl	MX_USART3_UART_Init
 894              	.LVL58:
 151:Src/main.c    ****   MX_RTC_Init();
 895              		.loc 1 151 0
 896 0014 FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 897              	.LVL59:
 152:Src/main.c    ****   /* USER CODE BEGIN 2 */
 898              		.loc 1 152 0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 27


 899 0018 FFF7FEFF 		bl	MX_RTC_Init
 900              	.LVL60:
 154:Src/main.c    ****   
 901              		.loc 1 154 0
 902 001c 0A48     		ldr	r0, .L66
 903 001e FFF7FEFF 		bl	debug_init
 904              	.LVL61:
 156:Src/main.c    **** 
 905              		.loc 1 156 0
 906 0022 0A48     		ldr	r0, .L66+4
 907 0024 FFF7FEFF 		bl	xprintf
 908              	.LVL62:
 174:Src/main.c    ****   defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);
 909              		.loc 1 174 0
 910 0028 01AC     		add	r4, sp, #4
 911 002a 094D     		ldr	r5, .L66+8
 912 002c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 913 002e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 914 0030 2B68     		ldr	r3, [r5]
 915 0032 2360     		str	r3, [r4]
 175:Src/main.c    **** 
 916              		.loc 1 175 0
 917 0034 0021     		movs	r1, #0
 918 0036 01A8     		add	r0, sp, #4
 919 0038 FFF7FEFF 		bl	osThreadCreate
 920              	.LVL63:
 921 003c 054B     		ldr	r3, .L66+12
 922 003e 1860     		str	r0, [r3]
 187:Src/main.c    ****   
 923              		.loc 1 187 0
 924 0040 FFF7FEFF 		bl	osKernelStart
 925              	.LVL64:
 926              	.L64:
 927 0044 FEE7     		b	.L64
 928              	.L67:
 929 0046 00BF     		.align	2
 930              	.L66:
 931 0048 00000000 		.word	huart3
 932 004c 00000000 		.word	.LC7
 933 0050 00000000 		.word	.LANCHOR0
 934 0054 00000000 		.word	defaultTaskHandle
 935              		.cfi_endproc
 936              	.LFE159:
 938              		.comm	pcb,4,4
 939              		.comm	defaultTaskHandle,4,4
 940              		.comm	hpcd_USB_OTG_FS,1024,4
 941              		.comm	huart3,112,4
 942              		.comm	hrtc,32,4
 943              		.section	.rodata
 944              		.align	2
 945              		.set	.LANCHOR0,. + 0
 946              	.LC8:
 947 0000 00000000 		.word	.LC0
 948 0004 00000000 		.word	StartDefaultTask
 949 0008 0000     		.short	0
 950 000a 0000     		.space	2
 951 000c 00000000 		.word	0
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 28


 952 0010 80000000 		.word	128
 953              		.section	.rodata.MX_USART3_UART_Init.str1.4,"aMS",%progbits,1
 954              		.align	2
 955              	.LC6:
 956 0000 5372632F 		.ascii	"Src/main.c\000"
 956      6D61696E 
 956      2E6300
 957              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
 958              		.align	2
 959              	.LC2:
 960 0000 44656661 		.ascii	"Default task start\012\000"
 960      756C7420 
 960      7461736B 
 960      20737461 
 960      72740A00 
 961              	.LC3:
 962 0014 25630A00 		.ascii	"%c\012\000"
 963              	.LC4:
 964 0018 4F4B0A00 		.ascii	"OK\012\000"
 965              	.LC5:
 966 001c 25640A00 		.ascii	"%d\012\000"
 967              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 968              		.align	2
 969              	.LC7:
 970 0000 53746172 		.ascii	"Start\012\000"
 970      740A00
 971              		.section	.rodata.str1.4,"aMS",%progbits,1
 972              		.align	2
 973              	.LC0:
 974 0000 64656661 		.ascii	"defaultTask\000"
 974      756C7454 
 974      61736B00 
 975              		.text
 976              	.Letext0:
 977              		.file 2 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\machine\\_default_types.h"
 978              		.file 3 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 979              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 980              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 981              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 982              		.file 7 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 983              		.file 8 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\lock.h"
 984              		.file 9 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\_types.h"
 985              		.file 10 "c:\\gcc_toolchain\\6_2017-q1-update\\lib\\gcc\\arm-none-eabi\\6.3.1\\include\\stddef.h"
 986              		.file 11 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\sys\\reent.h"
 987              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 988              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 989              		.file 14 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 990              		.file 15 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 991              		.file 16 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 992              		.file 17 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 993              		.file 18 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 994              		.file 19 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 995              		.file 20 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_uart.h"
 996              		.file 21 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_usb.h"
 997              		.file 22 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_pcd.h"
 998              		.file 23 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 999              		.file 24 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 29


 1000              		.file 25 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1001              		.file 26 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1002              		.file 27 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\stdlib.h"
 1003              		.file 28 "c:\\gcc_toolchain\\6_2017-q1-update\\arm-none-eabi\\include\\time.h"
 1004              		.file 29 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1005              		.file 30 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1006              		.file 31 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1007              		.file 32 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1008              		.file 33 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1009              		.file 34 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1010              		.file 35 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1011              		.file 36 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1012              		.file 37 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ip4.h"
 1013              		.file 38 "Middlewares/Third_Party/LwIP/src/include/lwip/prot/ethernet.h"
 1014              		.file 39 "Middlewares/Third_Party/LwIP/src/include/netif/ethernet.h"
 1015              		.file 40 "Middlewares/Third_Party/LwIP/src/include/lwip/ip.h"
 1016              		.file 41 "Middlewares/Third_Party/LwIP/src/include/lwip/udp.h"
 1017              		.file 42 "Middlewares/Third_Party/LwIP/system/arch/sys_arch.h"
 1018              		.file 43 "Middlewares/Third_Party/LwIP/src/include/lwip/timeouts.h"
 1019              		.file 44 "Middlewares/Third_Party/LwIP/src/include/lwip/tcpip.h"
 1020              		.file 45 "Inc/lwip.h"
 1021              		.file 46 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
 1022              		.file 47 "Inc/term_io.h"
 1023              		.file 48 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc_ex.h"
 1024              		.file 49 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
 1025              		.file 50 "Inc/dbgu.h"
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:18     .text.MX_GPIO_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:168    .text.MX_GPIO_Init:000000cc $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:175    .text.__io_putchar:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:182    .text.__io_putchar:00000000 __io_putchar
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:207    .text.__io_putchar:00000014 $d
                            *COM*:00000070 huart3
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:212    .text.inkey:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:219    .text.inkey:00000000 inkey
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:251    .text.inkey:0000001c $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:256    .text.StartDefaultTask:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:263    .text.StartDefaultTask:00000000 StartDefaultTask
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:364    .text.StartDefaultTask:00000078 $d
                            *COM*:00000004 pcb
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:377    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:384    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:414    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:419    .text._Error_Handler:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:426    .text._Error_Handler:00000000 _Error_Handler
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:441    .text.MX_USART3_UART_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:447    .text.MX_USART3_UART_Init:00000000 MX_USART3_UART_Init
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:498    .text.MX_USART3_UART_Init:00000034 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:505    .text.MX_USB_OTG_FS_PCD_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:511    .text.MX_USB_OTG_FS_PCD_Init:00000000 MX_USB_OTG_FS_PCD_Init
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:564    .text.MX_USB_OTG_FS_PCD_Init:00000038 $d
                            *COM*:00000400 hpcd_USB_OTG_FS
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:570    .text.MX_RTC_Init:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:576    .text.MX_RTC_Init:00000000 MX_RTC_Init
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:689    .text.MX_RTC_Init:00000098 $d
                            *COM*:00000020 hrtc
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:696    .text.SystemClock_Config:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:703    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:853    .text.SystemClock_Config:000000d4 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:862    .text.main:00000000 $t
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:869    .text.main:00000000 main
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:931    .text.main:00000048 $d
                            *COM*:00000004 defaultTaskHandle
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:944    .rodata:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:954    .rodata.MX_USART3_UART_Init.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:958    .rodata.StartDefaultTask.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:968    .rodata.main.str1.4:00000000 $d
C:\Users\Student\AppData\Local\Temp\ccAZicsG.s:972    .rodata.str1.4:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_LWIP_Init
udp_new
udp_bind
udp_connect
xprintf
pbuf_alloc
osDelay
udp_sendto
ARM GAS  C:\Users\Student\AppData\Local\Temp\ccAZicsG.s 			page 31


ip_addr_any
ip_addr_broadcast
HAL_IncTick
HAL_UART_Init
HAL_PCD_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_RTCEx_SetTimeStamp
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
debug_init
osThreadCreate
osKernelStart
